

```html
<!DOCTYPE html>
<html>
<head>
  <title>Student Task Manager</title>
  <link rel="stylesheet" type="text/css" href="styles.css">
</head>
<body>
  <h1>Student Task Manager</h1>
  
  <form id="taskForm">
    <label for="courseId">Course ID:</label>
    <input type="text" id="courseId" required>
    
    <label for="taskName">Task Name:</label>
    <input type="text" id="taskName" required>
    
    <label for="dueDate">Due Date:</label>
    <input type="date" id="dueDate" required>
    
    <label for="additionalDetails">Additional Details:</label>
    <textarea id="additionalDetails"></textarea>
    
    <button type="submit">Add Task</button>
  </form>
  
  <script src="script.js"></script>
</body>
</html>
```

```css
body {
  font-family: Arial, sans-serif;
}

form {
  margin-top: 20px;
}

label {
  display: block;
  margin-bottom: 5px;
}

input, textarea {
  width: 100%;
  padding: 5px;
  margin-bottom: 10px;
}

button {
  padding: 5px 10px;
  background-color: #007bff;
  color: #fff;
  border: none;
  cursor: pointer;
}
```

```javascript
document.getElementById('taskForm').addEventListener('submit', function(event) {
  event.preventDefault();
  
  const courseId = document.getElementById('courseId').value;
  const taskName = document.getElementById('taskName').value;
  const dueDate = document.getElementById('dueDate').value;
  const additionalDetails = document.getElementById('additionalDetails').value;
  
  // Send task data to backend
});
```

Express.js Backend:

```javascript
const express = require('express');
const bodyParser = require('body-parser');
const mongoose = require('mongoose');

const app = express();
const PORT = 3000;

app.use(bodyParser.json());

mongoose.connect('mongodb://localhost:27017/student_tasks', { useNewUrlParser: true, useUnifiedTopology: true });

const Task = mongoose.model('Task', {
  courseId: String,
  taskName: String,
  dueDate: Date,
  additionalDetails: String
});

app.get('/courses/:courseId/tasks', async (req, res) => {
  const { courseId } = req.params;
  
  try {
    const tasks = await Task.find({ courseId });
    
    if (tasks.length === 0) {
      res.status(404).json({ message: 'No tasks found for the specified course ID' });
    } else {
      res.json(tasks);
    }
  } catch (error) {
    res.status(500).json({ message: 'An error occurred while fetching tasks' });
  }
});

app.listen(PORT, () => {
  console.log(`Server is running on http://localhost:${PORT}`);
});
```
